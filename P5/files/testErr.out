bool q(int a) {
    return true;
}

void f() {
}

void g(int a) {
    return 1;
}

int h() {
    return true;
}

int m() {
    return;
}

struct P{
    int a;
};

void main() {
    int a;
    bool b;
    struct P p;
    cout << f(->void);
    cout << f(->void)();
    cout << P(struct);
    cout << p(P);
    cin >> f(->void);
    cin >> P(struct);
    cin >> p(P);
    a(int)();
    f(->void)(8);
    g(int->void)(true);
    a(int) = (b(bool) + a(int));
    a(int) = ("string" - 1);
    a(int) = (1 / b(bool));
    a(int) = (true * 1);
    a(int) = (b(bool) < a(int));
    a(int) = ("string" > 1);
    a(int) = (1 <= b(bool));
    a(int) = (true >= 1);
    b(bool) = (!a(int));
    b(bool) = (8 && true);
    b(bool) = (true || "string");
    b(bool) = (b(bool) == a(int));
    b(bool) = (b(bool) == 7);
    b(bool) = (b(bool) == "string");
    b(bool) = (a(int) == "string");
    b(bool) = (a(int) == true);
    b(bool) = (b(bool) != a(int));
    b(bool) = (b(bool) != 7);
    b(bool) = (b(bool) != "string");
    b(bool) = (a(int) != "string");
    b(bool) = (a(int) != true);
    b(bool) = (f(->void)() == g(int->void)(1));
    b(bool) = (f(->void)() != g(int->void)(1));
    b(bool) = (f(->void) == g(int->void));
    b(bool) = (f(->void) != g(int->void));
    b(bool) = (p(P) == p(P));
    b(bool) = (p(P) != p(P));
    b(bool) = (P(struct) == P(struct));
    b(bool) = (P(struct) != P(struct));
    f(->void) = g(int->void);
    P(struct) = P(struct);
    p(P) = p(P);
    if (true) {
        cout << f(->void);
        cout << f(->void)();
        cout << P(struct);
        cout << p(P);
        cin >> f(->void);
        cin >> P(struct);
        cin >> p(P);
        a(int)();
        f(->void)(8);
        g(int->void)(true);
        a(int) = (b(bool) + a(int));
        a(int) = ("string" - 1);
        a(int) = (1 / b(bool));
        a(int) = (true * 1);
        a(int) = (b(bool) < a(int));
        a(int) = ("string" > 1);
        a(int) = (1 <= b(bool));
        a(int) = (true >= 1);
        b(bool) = (!a(int));
        b(bool) = (8 && true);
        b(bool) = (true || "string");
        b(bool) = (b(bool) == a(int));
        b(bool) = (b(bool) == 7);
        b(bool) = (b(bool) == "string");
        b(bool) = (a(int) == "string");
        b(bool) = (a(int) == true);
        b(bool) = (b(bool) != a(int));
        b(bool) = (b(bool) != 7);
        b(bool) = (b(bool) != "string");
        b(bool) = (a(int) != "string");
        b(bool) = (a(int) != true);
        b(bool) = (f(->void)() == g(int->void)(1));
        b(bool) = (f(->void)() != g(int->void)(1));
        b(bool) = (f(->void) == g(int->void));
        b(bool) = (f(->void) != g(int->void));
        b(bool) = (p(P) == p(P));
        b(bool) = (p(P) != p(P));
        b(bool) = (P(struct) == P(struct));
        b(bool) = (P(struct) != P(struct));
        f(->void) = g(int->void);
        P(struct) = P(struct);
        p(P) = p(P);
    }
    while (true) {
        cout << f(->void);
        cout << f(->void)();
        cout << P(struct);
        cout << p(P);
        cin >> f(->void);
        cin >> P(struct);
        cin >> p(P);
        a(int)();
        f(->void)(8);
        g(int->void)(true);
        a(int) = (b(bool) + a(int));
        a(int) = ("string" - 1);
        a(int) = (1 / b(bool));
        a(int) = (true * 1);
        a(int) = (b(bool) < a(int));
        a(int) = ("string" > 1);
        a(int) = (1 <= b(bool));
        a(int) = (true >= 1);
        b(bool) = (!a(int));
        b(bool) = (8 && true);
        b(bool) = (true || "string");
        b(bool) = (b(bool) == a(int));
        b(bool) = (b(bool) == 7);
        b(bool) = (b(bool) == "string");
        b(bool) = (a(int) == "string");
        b(bool) = (a(int) == true);
        b(bool) = (b(bool) != a(int));
        b(bool) = (b(bool) != 7);
        b(bool) = (b(bool) != "string");
        b(bool) = (a(int) != "string");
        b(bool) = (a(int) != true);
        b(bool) = (f(->void)() == g(int->void)(1));
        b(bool) = (f(->void)() != g(int->void)(1));
        b(bool) = (f(->void) == g(int->void));
        b(bool) = (f(->void) != g(int->void));
        b(bool) = (p(P) == p(P));
        b(bool) = (p(P) != p(P));
        b(bool) = (P(struct) == P(struct));
        b(bool) = (P(struct) != P(struct));
        f(->void) = g(int->void);
        P(struct) = P(struct);
        p(P) = p(P);
    }
    repeat (1) {
        cout << f(->void);
        cout << f(->void)();
        cout << P(struct);
        cout << p(P);
        cin >> f(->void);
        cin >> P(struct);
        cin >> p(P);
        a(int)();
        f(->void)(8);
        g(int->void)(true);
        a(int) = (b(bool) + a(int));
        a(int) = ("string" - 1);
        a(int) = (1 / b(bool));
        a(int) = (true * 1);
        a(int) = (b(bool) < a(int));
        a(int) = ("string" > 1);
        a(int) = (1 <= b(bool));
        a(int) = (true >= 1);
        b(bool) = (!a(int));
        b(bool) = (8 && true);
        b(bool) = (true || "string");
        b(bool) = (b(bool) == a(int));
        b(bool) = (b(bool) == 7);
        b(bool) = (b(bool) == "string");
        b(bool) = (a(int) == "string");
        b(bool) = (a(int) == true);
        b(bool) = (b(bool) != a(int));
        b(bool) = (b(bool) != 7);
        b(bool) = (b(bool) != "string");
        b(bool) = (a(int) != "string");
        b(bool) = (a(int) != true);
        b(bool) = (f(->void)() == g(int->void)(1));
        b(bool) = (f(->void)() != g(int->void)(1));
        b(bool) = (f(->void) == g(int->void));
        b(bool) = (f(->void) != g(int->void));
        b(bool) = (p(P) == p(P));
        b(bool) = (p(P) != p(P));
        b(bool) = (P(struct) == P(struct));
        b(bool) = (P(struct) != P(struct));
        f(->void) = g(int->void);
        P(struct) = P(struct);
        p(P) = p(P);
    }
    if (a(int)) {
    }
    if (7) {
    }
    if ("string") {
    }
    while (a(int)) {
    }
    while (7) {
    }
    while ("string") {
    }
    repeat ("string") {
    }
    repeat (true) {
    }
    repeat (b(bool)) {
    }
    cout << (P(struct) + 1);
    a(int) = ((true + 3) * 4);
    b(bool) = (true && (false || 3));
    q(int->bool)(("a" * 4));
    a(int) = (1 + p(P)());
    b(bool) = ((true + 3) == a(int));
    a(int) = (true + "hello");
    a(int) = (1 + q(int->bool)(true));
    a(int) = (1 + q(int->bool)(1, 2));
    return (3 + true);
}

